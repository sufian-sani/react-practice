{"ast":null,"code":"var _jsxFileName = \"/home/user/react/lws/react-quiz/src/components/pages/Quiz.js\",\n  _s = $RefreshSig$();\nimport { getDatabase, ref, set } from \"firebase/database\";\nimport _ from \"lodash\";\nimport { useEffect, useReducer, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport useQuestions from \"../../hooks/useQuestions\";\nimport Answers from \"../Answers\";\nimport MiniPlayer from \"../MiniPlayer\";\nimport ProgressBar from \"../ProgressBar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = null;\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"questions\":\n      action.value.forEach(question => {\n        question.options.forEach(option => {\n          option.checked = false;\n        });\n      });\n      return action.value;\n    case \"answer\":\n      const questions = _.cloneDeep(state);\n      questions[action.questionID].options[action.optionIndex].checked = action.value;\n      return questions;\n    default:\n      return state;\n  }\n};\nexport default function Quiz() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    error,\n    questions\n  } = useQuestions(id);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [qna, dispatch] = useReducer(reducer, initialState);\n  const {\n    currentUser\n  } = useAuth();\n  const history = useHistory();\n  const {\n    location\n  } = history;\n  const {\n    state\n  } = location;\n  const {\n    videoTitle\n  } = state;\n  useEffect(() => {\n    dispatch({\n      type: \"questions\",\n      value: questions\n    });\n  }, [questions]);\n  function handleAnswerChange(e, index) {\n    dispatch({\n      type: \"answer\",\n      questionID: currentQuestion,\n      optionIndex: index,\n      value: e.target.checked\n    });\n  }\n\n  // handle when user clicks the next button to get the next question\n  function nextQuestion() {\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(prevCurrent => prevCurrent + 1);\n    }\n  }\n\n  // handle when user clicks the prev button to get back to the previous question\n  function prevQuestion() {\n    if (currentQuestion >= 1 && currentQuestion <= questions.length) {\n      setCurrentQuestion(prevCurrent => prevCurrent - 1);\n    }\n  }\n\n  // submit quiz\n  async function submit() {\n    const {\n      uid\n    } = currentUser;\n    const db = getDatabase();\n    const resultRef = ref(db, `result/${uid}`);\n    await set(resultRef, {\n      [id]: qna\n    });\n    history.push({\n      pathname: `/result/${id}`,\n      state: {\n        qna\n      }\n    });\n  }\n\n  // calculate percentage of progress\n  const percentage = questions.length > 0 ? (currentQuestion + 1) / questions.length * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"There was an error!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), !loading && !error && qna && qna.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: qna[currentQuestion].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Question can have multiple answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Answers, {\n        input: true,\n        options: qna[currentQuestion].options,\n        handleChange: handleAnswerChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        next: nextQuestion,\n        prev: prevQuestion,\n        submit: submit,\n        progress: percentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MiniPlayer, {\n        id: id,\n        title: videoTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(Quiz, \"PrgkvE74DWryeGcCwc45T0xJo/g=\", false, function () {\n  return [useParams, useQuestions, useAuth, useHistory];\n});\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["getDatabase","ref","set","_","useEffect","useReducer","useState","useHistory","useParams","useAuth","useQuestions","Answers","MiniPlayer","ProgressBar","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","reducer","state","action","type","value","forEach","question","options","option","checked","questions","cloneDeep","questionID","optionIndex","Quiz","_s","id","loading","error","currentQuestion","setCurrentQuestion","qna","dispatch","currentUser","history","location","videoTitle","handleAnswerChange","e","index","target","nextQuestion","length","prevCurrent","prevQuestion","submit","uid","db","resultRef","push","pathname","percentage","children","fileName","_jsxFileName","lineNumber","columnNumber","title","input","handleChange","next","prev","progress","_c","$RefreshReg$"],"sources":["/home/user/react/lws/react-quiz/src/components/pages/Quiz.js"],"sourcesContent":["import { getDatabase, ref, set } from \"firebase/database\";\nimport _ from \"lodash\";\nimport { useEffect, useReducer, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport useQuestions from \"../../hooks/useQuestions\";\nimport Answers from \"../Answers\";\nimport MiniPlayer from \"../MiniPlayer\";\nimport ProgressBar from \"../ProgressBar\";\n\nconst initialState = null;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"questions\":\n      action.value.forEach((question) => {\n        question.options.forEach((option) => {\n          option.checked = false;\n        });\n      });\n      return action.value;\n    case \"answer\":\n      const questions = _.cloneDeep(state);\n      questions[action.questionID].options[action.optionIndex].checked =\n        action.value;\n\n      return questions;\n    default:\n      return state;\n  }\n};\n\nexport default function Quiz() {\n  const { id } = useParams();\n  const { loading, error, questions } = useQuestions(id);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  const [qna, dispatch] = useReducer(reducer, initialState);\n  const { currentUser } = useAuth();\n  const history = useHistory();\n  const { location } = history;\n  const { state } = location;\n  const { videoTitle } = state;\n\n  useEffect(() => {\n    dispatch({\n      type: \"questions\",\n      value: questions,\n    });\n  }, [questions]);\n\n  function handleAnswerChange(e, index) {\n    dispatch({\n      type: \"answer\",\n      questionID: currentQuestion,\n      optionIndex: index,\n      value: e.target.checked,\n    });\n  }\n\n  // handle when user clicks the next button to get the next question\n  function nextQuestion() {\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion((prevCurrent) => prevCurrent + 1);\n    }\n  }\n\n  // handle when user clicks the prev button to get back to the previous question\n  function prevQuestion() {\n    if (currentQuestion >= 1 && currentQuestion <= questions.length) {\n      setCurrentQuestion((prevCurrent) => prevCurrent - 1);\n    }\n  }\n\n  // submit quiz\n  async function submit() {\n    const { uid } = currentUser;\n\n    const db = getDatabase();\n    const resultRef = ref(db, `result/${uid}`);\n\n    await set(resultRef, {\n      [id]: qna,\n    });\n\n    history.push({\n      pathname: `/result/${id}`,\n      state: {\n        qna,\n      },\n    });\n  }\n\n  // calculate percentage of progress\n  const percentage =\n    questions.length > 0 ? ((currentQuestion + 1) / questions.length) * 100 : 0;\n\n  return (\n    <>\n      {loading && <div>Loading ...</div>}\n      {error && <div>There was an error!</div>}\n      {!loading && !error && qna && qna.length > 0 && (\n        <>\n          <h1>{qna[currentQuestion].title}</h1>\n          <h4>Question can have multiple answers</h4>\n          <Answers\n            input\n            options={qna[currentQuestion].options}\n            handleChange={handleAnswerChange}\n          />\n          <ProgressBar\n            next={nextQuestion}\n            prev={prevQuestion}\n            submit={submit}\n            progress={percentage}\n          />\n          <MiniPlayer id={id} title={videoTitle} />\n        </>\n      )}\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}