{"ast":null,"code":"var _s = $RefreshSig$();\nimport { get, getDatabase, orderByKey, query, ref } from \"firebase/database\";\nimport { useEffect, useState } from \"react\";\nexport default function useAnswers(videoID) {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [answers, setAnswers] = useState([]);\n  useEffect(() => {\n    async function fetchAnswers() {\n      // database related works\n      const db = getDatabase();\n      const answerRef = ref(db, \"answers/\" + videoID + \"/questions\");\n      const answerQuery = query(answerRef, orderByKey());\n      try {\n        setError(false);\n        setLoading(true);\n        // request firebase database\n        const snapshot = await get(answerQuery);\n        setLoading(false);\n        if (snapshot.exists()) {\n          setAnswers(prevAnswers => {\n            return [...prevAnswers, ...Object.values(snapshot.val())];\n          });\n        }\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n        setError(true);\n      }\n    }\n    fetchAnswers();\n  }, [videoID]);\n  return {\n    loading,\n    error,\n    answers\n  };\n}\n_s(useAnswers, \"LJeXvbyKmS/toQM5JiIp3riUxdw=\");","map":{"version":3,"names":["get","getDatabase","orderByKey","query","ref","useEffect","useState","useAnswers","videoID","_s","loading","setLoading","error","setError","answers","setAnswers","fetchAnswers","db","answerRef","answerQuery","snapshot","exists","prevAnswers","Object","values","val","err","console","log"],"sources":["/home/user/react/lws/react-quiz/src/hooks/useAnswers.js"],"sourcesContent":["import { get, getDatabase, orderByKey, query, ref } from \"firebase/database\";\nimport { useEffect, useState } from \"react\";\n\nexport default function useAnswers(videoID) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [answers, setAnswers] = useState([]);\n\n  useEffect(() => {\n    async function fetchAnswers() {\n      // database related works\n      const db = getDatabase();\n      const answerRef = ref(db, \"answers/\" + videoID + \"/questions\");\n      const answerQuery = query(answerRef, orderByKey());\n\n      try {\n        setError(false);\n        setLoading(true);\n        // request firebase database\n        const snapshot = await get(answerQuery);\n        setLoading(false);\n        if (snapshot.exists()) {\n          setAnswers((prevAnswers) => {\n            return [...prevAnswers, ...Object.values(snapshot.val())];\n          });\n        }\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n        setError(true);\n      }\n    }\n\n    fetchAnswers();\n  }, [videoID]);\n\n  return {\n    loading,\n    error,\n    answers,\n  };\n}\n"],"mappings":";AAAA,SAASA,GAAG,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,GAAG,QAAQ,mBAAmB;AAC5E,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,UAAUA,CAACC,OAAO,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,eAAeW,YAAYA,CAAA,EAAG;MAC5B;MACA,MAAMC,EAAE,GAAGhB,WAAW,CAAC,CAAC;MACxB,MAAMiB,SAAS,GAAGd,GAAG,CAACa,EAAE,EAAE,UAAU,GAAGT,OAAO,GAAG,YAAY,CAAC;MAC9D,MAAMW,WAAW,GAAGhB,KAAK,CAACe,SAAS,EAAEhB,UAAU,CAAC,CAAC,CAAC;MAElD,IAAI;QACFW,QAAQ,CAAC,KAAK,CAAC;QACfF,UAAU,CAAC,IAAI,CAAC;QAChB;QACA,MAAMS,QAAQ,GAAG,MAAMpB,GAAG,CAACmB,WAAW,CAAC;QACvCR,UAAU,CAAC,KAAK,CAAC;QACjB,IAAIS,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;UACrBN,UAAU,CAAEO,WAAW,IAAK;YAC1B,OAAO,CAAC,GAAGA,WAAW,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACJ,QAAQ,CAACK,GAAG,CAAC,CAAC,CAAC,CAAC;UAC3D,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChBf,UAAU,CAAC,KAAK,CAAC;QACjBE,QAAQ,CAAC,IAAI,CAAC;MAChB;IACF;IAEAG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACR,OAAO,CAAC,CAAC;EAEb,OAAO;IACLE,OAAO;IACPE,KAAK;IACLE;EACF,CAAC;AACH;AAACL,EAAA,CAtCuBF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}