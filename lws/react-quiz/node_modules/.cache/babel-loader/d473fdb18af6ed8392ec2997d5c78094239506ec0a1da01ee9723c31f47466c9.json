{"ast":null,"code":"var _jsxFileName = \"/home/user/react/lws/react-quiz/src/components/pages/Result.js\",\n  _s = $RefreshSig$();\nimport _ from \"lodash\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport useAnswers from \"../../hooks/useAnswers\";\nimport Analysis from \"../Analysis\";\nimport Summary from \"../Summary\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Result() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    location\n  } = useHistory();\n  const {\n    state\n  } = location;\n  const {\n    qna\n  } = state;\n  const {\n    loading,\n    error,\n    answers\n  } = useAnswers(id);\n  function calculate() {\n    let score = 0;\n    answers.forEach((question, index1) => {\n      let correctIndexes = [],\n        checkedIndexes = [];\n      question.options.forEach((option, index2) => {\n        if (option.correct) correctIndexes.push(index2);\n        if (qna[index1].options[index2].checked) {\n          checkedIndexes.push(index2);\n          option.checked = true;\n        }\n      });\n      if (_.isEqual(correctIndexes, checkedIndexes)) {\n        score = score + 5;\n      }\n    });\n    return score;\n  }\n  const userScore = calculate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"There was an error!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), answers && answers.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Summary, {\n        score: userScore,\n        noq: answers.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Analysis, {\n        answers: answers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(Result, \"mNjB2bf8thh9moQAS6n1BMxmIUQ=\", false, function () {\n  return [useParams, useHistory, useAnswers];\n});\n_c = Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["_","useHistory","useParams","useAnswers","Analysis","Summary","jsxDEV","_jsxDEV","Fragment","_Fragment","Result","_s","id","location","state","qna","loading","error","answers","calculate","score","forEach","question","index1","correctIndexes","checkedIndexes","options","option","index2","correct","push","checked","isEqual","userScore","children","fileName","_jsxFileName","lineNumber","columnNumber","length","noq","_c","$RefreshReg$"],"sources":["/home/user/react/lws/react-quiz/src/components/pages/Result.js"],"sourcesContent":["import _ from \"lodash\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport useAnswers from \"../../hooks/useAnswers\";\nimport Analysis from \"../Analysis\";\nimport Summary from \"../Summary\";\n\nexport default function Result() {\n  const { id } = useParams();\n  const { location } = useHistory();\n  const { state } = location;\n  const { qna } = state;\n\n  const { loading, error, answers } = useAnswers(id);\n\n  function calculate() {\n    let score = 0;\n\n    answers.forEach((question, index1) => {\n      let correctIndexes = [],\n        checkedIndexes = [];\n\n      question.options.forEach((option, index2) => {\n        if (option.correct) correctIndexes.push(index2);\n        if (qna[index1].options[index2].checked) {\n          checkedIndexes.push(index2);\n          option.checked = true;\n        }\n      });\n\n      if (_.isEqual(correctIndexes, checkedIndexes)) {\n        score = score + 5;\n      }\n    });\n\n    return score;\n  }\n\n  const userScore = calculate();\n\n  return (\n    <>\n      {loading && <div>Loading...</div>}\n      {error && <div>There was an error!</div>}\n\n      {answers && answers.length > 0 && (\n        <>\n          <Summary score={userScore} noq={answers.length} />\n          <Analysis answers={answers} />\n        </>\n      )}\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,CAAC,MAAM,QAAQ;AACtB,SAASC,UAAU,EAAEC,SAAS,QAAQ,kBAAkB;AACxD,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,OAAO,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAM;IAAEW;EAAS,CAAC,GAAGZ,UAAU,CAAC,CAAC;EACjC,MAAM;IAAEa;EAAM,CAAC,GAAGD,QAAQ;EAC1B,MAAM;IAAEE;EAAI,CAAC,GAAGD,KAAK;EAErB,MAAM;IAAEE,OAAO;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGf,UAAU,CAACS,EAAE,CAAC;EAElD,SAASO,SAASA,CAAA,EAAG;IACnB,IAAIC,KAAK,GAAG,CAAC;IAEbF,OAAO,CAACG,OAAO,CAAC,CAACC,QAAQ,EAAEC,MAAM,KAAK;MACpC,IAAIC,cAAc,GAAG,EAAE;QACrBC,cAAc,GAAG,EAAE;MAErBH,QAAQ,CAACI,OAAO,CAACL,OAAO,CAAC,CAACM,MAAM,EAAEC,MAAM,KAAK;QAC3C,IAAID,MAAM,CAACE,OAAO,EAAEL,cAAc,CAACM,IAAI,CAACF,MAAM,CAAC;QAC/C,IAAIb,GAAG,CAACQ,MAAM,CAAC,CAACG,OAAO,CAACE,MAAM,CAAC,CAACG,OAAO,EAAE;UACvCN,cAAc,CAACK,IAAI,CAACF,MAAM,CAAC;UAC3BD,MAAM,CAACI,OAAO,GAAG,IAAI;QACvB;MACF,CAAC,CAAC;MAEF,IAAI/B,CAAC,CAACgC,OAAO,CAACR,cAAc,EAAEC,cAAc,CAAC,EAAE;QAC7CL,KAAK,GAAGA,KAAK,GAAG,CAAC;MACnB;IACF,CAAC,CAAC;IAEF,OAAOA,KAAK;EACd;EAEA,MAAMa,SAAS,GAAGd,SAAS,CAAC,CAAC;EAE7B,oBACEZ,OAAA,CAAAE,SAAA;IAAAyB,QAAA,GACGlB,OAAO,iBAAIT,OAAA;MAAA2B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAChCrB,KAAK,iBAAIV,OAAA;MAAA2B,QAAA,EAAK;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAEvCpB,OAAO,IAAIA,OAAO,CAACqB,MAAM,GAAG,CAAC,iBAC5BhC,OAAA,CAAAE,SAAA;MAAAyB,QAAA,gBACE3B,OAAA,CAACF,OAAO;QAACe,KAAK,EAAEa,SAAU;QAACO,GAAG,EAAEtB,OAAO,CAACqB;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClD/B,OAAA,CAACH,QAAQ;QAACc,OAAO,EAAEA;MAAQ;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC9B,CACH;EAAA,eACD,CAAC;AAEP;AAAC3B,EAAA,CA9CuBD,MAAM;EAAA,QACbR,SAAS,EACHD,UAAU,EAIKE,UAAU;AAAA;AAAAsC,EAAA,GANxB/B,MAAM;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}